{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "contract IUniswapV3Factory",
						"name": "factory",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "TWAP_PERIOD",
				"outputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenA",
						"type": "address"
					},
					{
						"internalType": "uint24",
						"name": "fee",
						"type": "uint24"
					}
				],
				"name": "getPoolForTWAP",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "pool",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "token0",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenToPrice",
						"type": "uint256"
					}
				],
				"name": "latestPrice",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "uniswapFactory",
				"outputs": [
					{
						"internalType": "contract IUniswapV3Factory",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"latestPrice(address,address,uint256)": {
					"params": {
						"tokenToPrice": "Which token we're pricing (0 or 1) relative to the other. Eg, for the USDC/ETH pool (token0 = USDC, token1 = ETH), we want the price of ETH in terms of USDC, not vice versa: so we should pass in `tokenToPrice == 1'. // ^^^^^^^^^^^^^ this is handled by the swapOracle, so use that for pricing data"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"constructor": {
					"notice": "Example pools to pass in: USDC/ETH (0.05%): 0x88e6a0c2ddd26feeb64f039a2c41296fcb3f5640, 1, -12 ETH/USDT (0.05%): 0x11b815efb8f581194ae79006d24e0d814b7697f6, 0, -12"
				},
				"latestPrice(address,address,uint256)": {
					"notice": "decimalPlaces How many decimal places are already included in the numbers Uniswap returns.  So, `decimalPlaces = 3` means when Uniswap returns 12345, it actually represents 12.345 (ie, the last three digits were the decimal part). `decimalPlaces = -3` means when Uniswap returns 12345, it actually represents 12,345,000."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/ancillary/TWAPoracle.sol": "TWAPOracle"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
			"keccak256": "0xd1d8caaeb45f78e0b0715664d56c220c283c89bf8b8c02954af86404d6b367f8",
			"license": "MIT",
			"urls": [
				"bzz-raw://300a0cc7be3b26c96c22a47ffa9530a585e1c4f2dba3021d9bf309dc63007487",
				"dweb:/ipfs/QmQmxsvxK6CaJmQ4D8vDCYPLHMqcMmZLcBqedG4GFAbzu9"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da",
			"license": "MIT",
			"urls": [
				"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b",
				"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A"
			]
		},
		"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
			"keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
			"license": "MIT",
			"urls": [
				"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
				"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol": {
			"keccak256": "0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2",
				"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B"
			]
		},
		"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
			"keccak256": "0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5",
				"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh"
			]
		},
		"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
			"keccak256": "0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5",
				"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ"
			]
		},
		"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
			"keccak256": "0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7",
				"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c"
			]
		},
		"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
			"keccak256": "0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03",
				"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39"
			]
		},
		"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
			"keccak256": "0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047",
				"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3"
			]
		},
		"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
			"keccak256": "0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735",
				"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u"
			]
		},
		"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
			"keccak256": "0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f",
				"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg"
			]
		},
		"@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol": {
			"keccak256": "0x86715eb960f18e01ac94e3bba4614ed51a887fa3c5bd1c43bf80aa98e019cf2d",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://bfc1d5d58e59015086b0e65a6c3a2ddad312e2350480510f6c0c8167f3d71a37",
				"dweb:/ipfs/QmQndULYjFsHKHjMAKLMfc12vWbVB5FawtioHtvwcWRJZp"
			]
		},
		"contracts/ancillary/IOracle.sol": {
			"keccak256": "0xcdbae3d74d374548576f040c825c3caace16ec0fd2c0de0cf629bbb32581f87d",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://5f0365bb96518a30aa22c0f23a21e04f0c54f0ddf52ed1b3201f5b64e9ce1906",
				"dweb:/ipfs/QmZGqNwQ8U3qQLfVc2iRquJ39Nk5h4zj4BZXuZnfKGdkXn"
			]
		},
		"contracts/ancillary/TWAPoracle.sol": {
			"keccak256": "0x71b23a45097fb73b7ef3c3888f9f1ed3abfcf5bcad594748c60052c75ed36e21",
			"license": "MIT",
			"urls": [
				"bzz-raw://1fbec5576d7d928e44eb4cf0913fbbec6de64bf15cfe16d13c19f2fd1aeaf2cc",
				"dweb:/ipfs/QmQ1HmYqJUEkjAFdbS3XTyV3dM81cTzr3B433L89usjVuD"
			]
		},
		"contracts/uniswapv08/v3-core/FullMath.sol": {
			"keccak256": "0x952e725c56dbd289472791252895614d486c4653b6676294d44c903e6e526810",
			"license": "MIT",
			"urls": [
				"bzz-raw://f81790f9011b80795190055af6ff083e0b66140945d616864d7abfedc2097018",
				"dweb:/ipfs/Qmep2qonPseT8sta3x8ncePyGGCi4AgRDWfE5v13PF4HGF"
			]
		},
		"contracts/uniswapv08/v3-core/TickMath.sol": {
			"keccak256": "0x19498e907f73695e4222ac9fe2d5500039a280373b4df3e7fd655dcdbd80bafe",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://625defdb4115d52e63566a581f61c9b19f3d28484a66606316477f8f79b6f579",
				"dweb:/ipfs/QmNiLfg3F7AJuPTKuiV8uqRjeM3vhSHvtGCPXkoAEsFAZs"
			]
		},
		"contracts/uniswapv08/v3-periphery/OracleLibrary.sol": {
			"keccak256": "0x828faf50ae1f821569eb7b9d0071d0bbea3730eaf3cb39b2dc35a3aed842ac33",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://55b79c53453a4551e5f702441c0aec46e83ca50e97c20dab14ef399342efdb7b",
				"dweb:/ipfs/QmfN6jzYRZvfvUrXFvE6ewevyrZq3fTKxKZZyn417ycBk1"
			]
		},
		"contracts/uniswapv08/v3-periphery/PoolAddress.sol": {
			"keccak256": "0x6eaebb0d204470cbbc0f6ab5c595f35e78c4fcf494fff7abf4c8840705577adc",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://a0b58bccb7003d0450d4d7b4f85276f2ae95cd1682cc8d6c70b79739e41268f9",
				"dweb:/ipfs/QmW6DejUL38FVv1fb71xpfkEYhdK17SiVwB3oGofG7QtWJ"
			]
		}
	},
	"version": 1
}