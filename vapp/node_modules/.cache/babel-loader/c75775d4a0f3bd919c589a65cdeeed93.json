{"remainingRequest":"/home/kevin/Code/solidity_projects/beraMarket/vapp/node_modules/babel-loader/lib/index.js!/home/kevin/Code/solidity_projects/beraMarket/vapp/node_modules/vuetify/lib/util/dom.js","dependencies":[{"path":"/home/kevin/Code/solidity_projects/beraMarket/vapp/node_modules/vuetify/lib/util/dom.js","mtime":1630154440556},{"path":"/home/kevin/Code/solidity_projects/beraMarket/vapp/node_modules/cache-loader/dist/cjs.js","mtime":1630154390989},{"path":"/home/kevin/Code/solidity_projects/beraMarket/vapp/node_modules/babel-loader/lib/index.js","mtime":1630154391115}],"contextDependencies":[],"result":["/**\n * Returns:\n *  - 'null' if the node is not attached to the DOM\n *  - the root node (HTMLDocument | ShadowRoot) otherwise\n */\nexport function attachedRoot(node) {\n  /* istanbul ignore next */\n  if (typeof node.getRootNode !== 'function') {\n    // Shadow DOM not supported (IE11), lets find the root of this node\n    while (node.parentNode) {\n      node = node.parentNode;\n    } // The root parent is the document if the node is attached to the DOM\n\n\n    if (node !== document) return null;\n    return document;\n  }\n\n  var root = node.getRootNode(); // The composed root node is the document if the node is attached to the DOM\n\n  if (root !== document && root.getRootNode({\n    composed: true\n  }) !== document) return null;\n  return root;\n}",{"version":3,"sources":["../../src/util/dom.ts"],"names":[],"mappings":"AAAA;;;;AAIG;AACH,OAAM,SAAA,YAAA,CAAA,IAAA,EAAkC;AACtC;AACA,MAAI,OAAO,IAAI,CAAX,WAAA,KAAJ,UAAA,EAA4C;AAC1C;AACA,WAAO,IAAI,CAAX,UAAA;AAAwB,MAAA,IAAI,GAAG,IAAI,CAFO,UAElB;AAAxB,KAF0C,CAI1C;;;AACA,QAAI,IAAI,KAAR,QAAA,EAAuB,OAAA,IAAA;AAEvB,WAAA,QAAA;AACD;;AAED,MAAM,IAAI,GAAG,IAAI,CAZqB,WAYzB,EAAb,CAZsC,CActC;;AACA,MAAI,IAAI,KAAJ,QAAA,IAAqB,IAAI,CAAJ,WAAA,CAAiB;AAAE,IAAA,QAAQ,EAAE;AAAZ,GAAjB,MAAzB,QAAA,EAA4E,OAAA,IAAA;AAE5E,SAAA,IAAA;AACD","sourcesContent":["/**\n * Returns:\n *  - 'null' if the node is not attached to the DOM\n *  - the root node (HTMLDocument | ShadowRoot) otherwise\n */\nexport function attachedRoot (node: Node): null | HTMLDocument | ShadowRoot {\n  /* istanbul ignore next */\n  if (typeof node.getRootNode !== 'function') {\n    // Shadow DOM not supported (IE11), lets find the root of this node\n    while (node.parentNode) node = node.parentNode\n\n    // The root parent is the document if the node is attached to the DOM\n    if (node !== document) return null\n\n    return document\n  }\n\n  const root = node.getRootNode()\n\n  // The composed root node is the document if the node is attached to the DOM\n  if (root !== document && root.getRootNode({ composed: true }) !== document) return null\n\n  return root as HTMLDocument | ShadowRoot\n}\n"],"sourceRoot":""}]}