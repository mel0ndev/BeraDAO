{"remainingRequest":"/home/kevin/Code/solidity_projects/beraMarket/vapp/node_modules/babel-loader/lib/index.js!/home/kevin/Code/solidity_projects/beraMarket/vapp/node_modules/vuetify/lib/directives/mutate/index.js","dependencies":[{"path":"/home/kevin/Code/solidity_projects/beraMarket/vapp/node_modules/vuetify/lib/directives/mutate/index.js","mtime":1630154440790},{"path":"/home/kevin/Code/solidity_projects/beraMarket/vapp/node_modules/cache-loader/dist/cjs.js","mtime":1630154390989},{"path":"/home/kevin/Code/solidity_projects/beraMarket/vapp/node_modules/babel-loader/lib/index.js","mtime":1630154391115}],"contextDependencies":[],"result":["import \"core-js/modules/es6.string.sub\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _objectWithoutProperties from \"/home/kevin/Code/solidity_projects/beraMarket/vapp/node_modules/@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _typeof from \"/home/kevin/Code/solidity_projects/beraMarket/vapp/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\nvar _excluded = [\"once\"];\n\nfunction inserted(el, binding) {\n  var modifiers = binding.modifiers || {};\n  var value = binding.value;\n  var callback = _typeof(value) === 'object' ? value.handler : value;\n\n  var once = modifiers.once,\n      modifierKeys = _objectWithoutProperties(modifiers, _excluded);\n\n  var hasModifiers = Object.keys(modifierKeys).length > 0; // Options take top priority\n\n  var options = _typeof(value) === 'object' && value.options ? value.options : hasModifiers // If we have modifiers, use only those provided\n  ? {\n    attributes: modifierKeys.attr,\n    childList: modifierKeys.child,\n    subtree: modifierKeys.sub,\n    characterData: modifierKeys.char\n  } // Defaults to everything on\n  : {\n    attributes: true,\n    childList: true,\n    subtree: true,\n    characterData: true\n  };\n  var observer = new MutationObserver(function (mutationsList, observer) {\n    /* istanbul ignore if */\n    if (!el._mutate) return; // Just in case, should never fire\n\n    callback(mutationsList, observer); // If has the once modifier, unbind\n\n    once && unbind(el);\n  });\n  observer.observe(el, options);\n  el._mutate = {\n    observer: observer\n  };\n}\n\nfunction unbind(el) {\n  /* istanbul ignore if */\n  if (!el._mutate) return;\n\n  el._mutate.observer.disconnect();\n\n  delete el._mutate;\n}\n\nexport var Mutate = {\n  inserted: inserted,\n  unbind: unbind\n};\nexport default Mutate;",{"version":3,"sources":["../../../src/directives/mutate/index.ts"],"names":[],"mappings":";;;;;;;AAkBA,SAAA,QAAA,CAAA,EAAA,EAAA,OAAA,EAAiE;AAC/D,MAAM,SAAS,GAAG,OAAO,CAAP,SAAA,IAAlB,EAAA;AACA,MAAM,KAAK,GAAG,OAAO,CAArB,KAAA;AACA,MAAM,QAAQ,GAAG,QAAA,KAAA,MAAA,QAAA,GAA4B,KAAK,CAAjC,OAAA,GAAjB,KAAA;;AACA,MAAM,IAAN,GAAA,SAAA,CAAM,IAAN;AAAA,MAAiB,YAAjB,4BAAA,SAAA;;AACA,MAAM,YAAY,GAAG,MAAM,CAAN,IAAA,CAAA,YAAA,EAAA,MAAA,GAL0C,CAK/D,CAL+D,CAO/D;;AACA,MAAM,OAAO,GAAG,QAAA,KAAA,MAAA,QAAA,IAA6B,KAAK,CAAlC,OAAA,GACZ,KAAK,CADO,OAAA,GAEZ,YAAY,CACZ;AADY,IAEV;AACA,IAAA,UAAU,EAAE,YAAY,CADxB,IAAA;AAEA,IAAA,SAAS,EAAE,YAAY,CAFvB,KAAA;AAGA,IAAA,OAAO,EAAE,YAAY,CAHrB,GAAA;AAIA,IAAA,aAAa,EAAE,YAAY,CAAC;AAJ5B,GAFU,CAQZ;AARY,IASV;AACA,IAAA,UAAU,EADV,IAAA;AAEA,IAAA,SAAS,EAFT,IAAA;AAGA,IAAA,OAAO,EAHP,IAAA;AAIA,IAAA,aAAa,EAAE;AAJf,GAXN;AAkBA,MAAM,QAAQ,GAAG,IAAA,gBAAA,CAAqB,UAAA,aAAA,EAAA,QAAA,EAGlC;AACF;AACA,QAAI,CAAC,EAAE,CAAP,OAAA,EAFE,OAAA,CAEsB;;AAExB,IAAA,QAAQ,CAAA,aAAA,EAJN,QAIM,CAAR,CAJE,CAMF;;AACA,IAAA,IAAI,IAAI,MAAM,CAAd,EAAc,CAAd;AAVF,GAAiB,CAAjB;AAaA,EAAA,QAAQ,CAAR,OAAA,CAAA,EAAA,EAAA,OAAA;AACA,EAAA,EAAE,CAAF,OAAA,GAAa;AAAE,IAAA,QAAA,EAAA;AAAF,GAAb;AACD;;AAED,SAAA,MAAA,CAAA,EAAA,EAAgC;AAC9B;AACA,MAAI,CAAC,EAAE,CAAP,OAAA,EAAiB;;AAEjB,EAAA,EAAE,CAAF,OAAA,CAAA,QAAA,CAAA,UAAA;;AACA,SAAO,EAAE,CAAT,OAAA;AACD;;AAED,OAAO,IAAM,MAAM,GAAG;AACpB,EAAA,QADoB,EACpB,QADoB;AAEpB,EAAA,MAAA,EAAA;AAFoB,CAAf;AAKP,eAAA,MAAA","sourcesContent":["import { VNodeDirective } from 'vue'\n\ntype MutateHandler = (\n  mutationsList: MutationRecord[],\n  observer: MutationObserver,\n) => void\n\ninterface MutateVNodeDirective extends Omit<VNodeDirective, 'modifiers'> {\n  value?: MutateHandler | { handler: MutateHandler, options?: MutationObserverInit }\n  modifiers?: {\n    once?: boolean\n    attr?: boolean\n    child?: boolean\n    sub?: boolean\n    char?: boolean\n  }\n}\n\nfunction inserted (el: HTMLElement, binding: MutateVNodeDirective) {\n  const modifiers = binding.modifiers || {}\n  const value = binding.value\n  const callback = typeof value === 'object' ? value.handler : value!\n  const { once, ...modifierKeys } = modifiers\n  const hasModifiers = Object.keys(modifierKeys).length > 0\n\n  // Options take top priority\n  const options = typeof value === 'object' && value.options\n    ? value.options\n    : hasModifiers\n      // If we have modifiers, use only those provided\n      ? {\n        attributes: modifierKeys.attr,\n        childList: modifierKeys.child,\n        subtree: modifierKeys.sub,\n        characterData: modifierKeys.char,\n      }\n      // Defaults to everything on\n      : {\n        attributes: true,\n        childList: true,\n        subtree: true,\n        characterData: true,\n      }\n\n  const observer = new MutationObserver((\n    mutationsList: MutationRecord[],\n    observer: MutationObserver\n  ) => {\n    /* istanbul ignore if */\n    if (!el._mutate) return // Just in case, should never fire\n\n    callback(mutationsList, observer)\n\n    // If has the once modifier, unbind\n    once && unbind(el)\n  })\n\n  observer.observe(el, options)\n  el._mutate = { observer }\n}\n\nfunction unbind (el: HTMLElement) {\n  /* istanbul ignore if */\n  if (!el._mutate) return\n\n  el._mutate.observer.disconnect()\n  delete el._mutate\n}\n\nexport const Mutate = {\n  inserted,\n  unbind,\n}\n\nexport default Mutate\n"],"sourceRoot":""}]}